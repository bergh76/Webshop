@model Webshop.ViewModels.ShoppingCartViewModel
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@*@using Microsoft.Extensions.Options*@
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = Localizer["Index"];
}
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@{
    ViewBag.Title = "Shopping Cart";
}
@functions
{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}
<script type="text/javascript">
        $(function () {
            // Document.ready -> link up remove event handler
            $(".RemoveLink").click(function () {
                // Get the id from the link
                var recordToDelete = $(this).attr("data-id");
                var PostToUrl = $(this).attr("data-url");
                if (recordToDelete != '') {

                    // Perform the ajax post
                    $.ajax(PostToUrl, {
                        type: "post",
                        data: { "id": recordToDelete },
                        dataType: "json",
                        headers: { "RequestVerificationToken": '@GetAntiXsrfRequestToken()' }
                    }).done(function (data) {
                        // Successful requests get here
                        // Update the page elements
                        if (data.ItemCount == 0) {
                            $('#row-' + data.DeleteId).fadeOut('slow');
                            window.location.reload().fadeOut("fast")
                        } else {
                            $('#item-count-' + data.DeleteId).text(data.ItemCount);
                            window.location.reload().fadeOut("fast")
                        }

                        $('#cart-total').text(data.CartTotal);
                        $('#update-message').text(data.Message);
                        $('#cart-status').text(data.CartCount);
                        console.log("Borttaget\n", PostToUrl, "\n")
                        console.log("Data \n", data, "\n")
                        console.log("Borttaget", data.DeleteId)
                        window.location.reload().fadeOut("fast");
                    });
                }
            });

        });
</script>



<section class="container">
    <div class="row">
        <div class="col-xs-12 pad-top content-box">
            <h3>@Localizer["CartHeader"]</h3>
            <p id="update-message"> </p>
            @await Component.InvokeAsync("CheckOutCart")

            <div class="pull-right" id="cart-total">
                @*@{ var sumTotal = Model.CartTotal;
                    var result = Math.Round(sumTotal, 2);
                }
                <h4>@Localizer["CartTotal"] @result</h4>*@
            </div>

            @if (Model.CartTotal == 0)

            {
                <div class="col-sm-12"><a asp-controller="CheckOut" asp-action="Checkout" class="btn btn-sm hidden btn-alert pull-right margin-bottom">@Localizer["Checkout"]</a><p>&nbsp;</p></div>

            }

            else
            {
                <div class="col-sm-12"><a asp-controller="CheckOut" asp-action="Checkout" class="btn btn-sm btn-success pull-right margin-bottom">@Localizer["Checkout"]</a><p>&nbsp;</p></div>

            }
        </div>
    </div>
</section>


@section Scripts {
    -    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
